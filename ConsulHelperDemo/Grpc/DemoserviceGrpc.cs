// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demoservice.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace GrpcDemo {
  /// <summary>
  ///  The demo service definition.
  /// </summary>
  public static class DemoService
  {
    static readonly string __ServiceName = "GrpcDemo.DemoService";

    static readonly Marshaller<global::GrpcDemo.ServiceKey> __Marshaller_ServiceKey = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcDemo.ServiceKey.Parser.ParseFrom);
    static readonly Marshaller<global::GrpcDemo.ServiceValue> __Marshaller_ServiceValue = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcDemo.ServiceValue.Parser.ParseFrom);

    static readonly Method<global::GrpcDemo.ServiceKey, global::GrpcDemo.ServiceValue> __Method_GetKeyValue = new Method<global::GrpcDemo.ServiceKey, global::GrpcDemo.ServiceValue>(
        MethodType.Unary,
        __ServiceName,
        "GetKeyValue",
        __Marshaller_ServiceKey,
        __Marshaller_ServiceValue);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcDemo.DemoserviceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DemoService</summary>
    public abstract class DemoServiceBase
    {
      /// <summary>
      ///  Get the value of a key.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::GrpcDemo.ServiceValue> GetKeyValue(global::GrpcDemo.ServiceKey request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DemoService</summary>
    public class DemoServiceClient : ClientBase<DemoServiceClient>
    {
      /// <summary>Creates a new client for DemoService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DemoServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DemoService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DemoServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DemoServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DemoServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Get the value of a key.
      /// </summary>
      public virtual global::GrpcDemo.ServiceValue GetKeyValue(global::GrpcDemo.ServiceKey request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetKeyValue(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Get the value of a key.
      /// </summary>
      public virtual global::GrpcDemo.ServiceValue GetKeyValue(global::GrpcDemo.ServiceKey request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetKeyValue, null, options, request);
      }
      /// <summary>
      ///  Get the value of a key.
      /// </summary>
      public virtual AsyncUnaryCall<global::GrpcDemo.ServiceValue> GetKeyValueAsync(global::GrpcDemo.ServiceKey request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetKeyValueAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Get the value of a key.
      /// </summary>
      public virtual AsyncUnaryCall<global::GrpcDemo.ServiceValue> GetKeyValueAsync(global::GrpcDemo.ServiceKey request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetKeyValue, null, options, request);
      }
      protected override DemoServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DemoServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(DemoServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetKeyValue, serviceImpl.GetKeyValue).Build();
    }

  }
}
#endregion
