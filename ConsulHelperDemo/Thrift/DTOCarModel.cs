/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Taoche.ES
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class DTOCarModel : TBase
  {
    private int _ucarid;
    private string _ucarserialnumber;
    private int _ucarstatus;
    private int _carproviceid;
    private int _carcityid;
    private string _color;
    private int _drivingmileage;
    private int _completerate;
    private int _carsource1l;
    private int _isvideo;
    private int _firstpictrue;
    private int _cartype;
    private int _source;
    private int _isneglect;
    private int _picturecount;
    private int _picturenumber;
    private double _displayprice;
    private long _statusmodifytime;
    private long _createtime;
    private long _buycardate;
    private long _carpublishtime;
    private string _ucarpicwholepath;
    private int _isdealerrecommend;
    private int _isauthenticated;
    private int _isrecommendgl;
    private int _isowncar;
    private double _c2bprice;
    private int _istop;
    private string _statedescription;
    private int _iswarranty;
    private string _warrantytypes;
    private int _isshowmr;
    private string _carprovincename;
    private string _carcityname;
    private int _cardistrictid;
    private string _cardistrictname;
    private string _slogan;
    private double _b2bprice;
    private int _isb2b;
    private int _mainbrandid;
    private int _producerid;
    private string _country;
    private int _brandid;
    private string _carlevel;
    private int _carlevelvalue;
    private long _carid;
    private int _gearboxtype;
    private string _gearboxtypestring;
    private double _exhaustvalue;
    private int _caryear;
    private double _car_referprice;
    private string _envirstandard;
    private double _consumption;
    private int _oiltype;
    private int _enginelocation;
    private int _bodydoors;
    private int _seatnummin;
    private int _seatnummax;
    private int _iswagon;
    private int _drivetype;
    private int _isagency;
    private int _csbodyform;
    private int _brandattr;
    private int _ismarkingvendor;
    private int _countryvalue;
    private int _userid;
    private int _superiorid;
    private string _vendorname;
    private int _vendortype;
    private string _contact;
    private int _isjdvendor;
    private int _isinctransfer;
    private int _usertype;
    private int _isactivity;
    private int _membertype;
    private int _isbangmai;
    private int _dvqflag;
    private int _isbangmaiche;
    private string _baidumap;
    private double _distance;
    private string _linkman;
    private string _cartypeconfig;
    private int _siteid;
    private string _cartitle;
    private int _carlevelsecond;
    private double _boost;
    private double _boostc;
    private double _boostapp;
    private long _clickcount;
    private double _score;

    public int Ucarid
    {
      get
      {
        return _ucarid;
      }
      set
      {
        __isset.ucarid = true;
        this._ucarid = value;
      }
    }

    public string Ucarserialnumber
    {
      get
      {
        return _ucarserialnumber;
      }
      set
      {
        __isset.ucarserialnumber = true;
        this._ucarserialnumber = value;
      }
    }

    public int Ucarstatus
    {
      get
      {
        return _ucarstatus;
      }
      set
      {
        __isset.ucarstatus = true;
        this._ucarstatus = value;
      }
    }

    public int Carproviceid
    {
      get
      {
        return _carproviceid;
      }
      set
      {
        __isset.carproviceid = true;
        this._carproviceid = value;
      }
    }

    public int Carcityid
    {
      get
      {
        return _carcityid;
      }
      set
      {
        __isset.carcityid = true;
        this._carcityid = value;
      }
    }

    public string Color
    {
      get
      {
        return _color;
      }
      set
      {
        __isset.color = true;
        this._color = value;
      }
    }

    public int Drivingmileage
    {
      get
      {
        return _drivingmileage;
      }
      set
      {
        __isset.drivingmileage = true;
        this._drivingmileage = value;
      }
    }

    public int Completerate
    {
      get
      {
        return _completerate;
      }
      set
      {
        __isset.completerate = true;
        this._completerate = value;
      }
    }

    public int Carsource1l
    {
      get
      {
        return _carsource1l;
      }
      set
      {
        __isset.carsource1l = true;
        this._carsource1l = value;
      }
    }

    public int Isvideo
    {
      get
      {
        return _isvideo;
      }
      set
      {
        __isset.isvideo = true;
        this._isvideo = value;
      }
    }

    public int Firstpictrue
    {
      get
      {
        return _firstpictrue;
      }
      set
      {
        __isset.firstpictrue = true;
        this._firstpictrue = value;
      }
    }

    public int Cartype
    {
      get
      {
        return _cartype;
      }
      set
      {
        __isset.cartype = true;
        this._cartype = value;
      }
    }

    public int Source
    {
      get
      {
        return _source;
      }
      set
      {
        __isset.source = true;
        this._source = value;
      }
    }

    public int Isneglect
    {
      get
      {
        return _isneglect;
      }
      set
      {
        __isset.isneglect = true;
        this._isneglect = value;
      }
    }

    public int Picturecount
    {
      get
      {
        return _picturecount;
      }
      set
      {
        __isset.picturecount = true;
        this._picturecount = value;
      }
    }

    public int Picturenumber
    {
      get
      {
        return _picturenumber;
      }
      set
      {
        __isset.picturenumber = true;
        this._picturenumber = value;
      }
    }

    public double Displayprice
    {
      get
      {
        return _displayprice;
      }
      set
      {
        __isset.displayprice = true;
        this._displayprice = value;
      }
    }

    public long Statusmodifytime
    {
      get
      {
        return _statusmodifytime;
      }
      set
      {
        __isset.statusmodifytime = true;
        this._statusmodifytime = value;
      }
    }

    public long Createtime
    {
      get
      {
        return _createtime;
      }
      set
      {
        __isset.createtime = true;
        this._createtime = value;
      }
    }

    public long Buycardate
    {
      get
      {
        return _buycardate;
      }
      set
      {
        __isset.buycardate = true;
        this._buycardate = value;
      }
    }

    public long Carpublishtime
    {
      get
      {
        return _carpublishtime;
      }
      set
      {
        __isset.carpublishtime = true;
        this._carpublishtime = value;
      }
    }

    public string Ucarpicwholepath
    {
      get
      {
        return _ucarpicwholepath;
      }
      set
      {
        __isset.ucarpicwholepath = true;
        this._ucarpicwholepath = value;
      }
    }

    public int Isdealerrecommend
    {
      get
      {
        return _isdealerrecommend;
      }
      set
      {
        __isset.isdealerrecommend = true;
        this._isdealerrecommend = value;
      }
    }

    public int Isauthenticated
    {
      get
      {
        return _isauthenticated;
      }
      set
      {
        __isset.isauthenticated = true;
        this._isauthenticated = value;
      }
    }

    public int Isrecommendgl
    {
      get
      {
        return _isrecommendgl;
      }
      set
      {
        __isset.isrecommendgl = true;
        this._isrecommendgl = value;
      }
    }

    public int Isowncar
    {
      get
      {
        return _isowncar;
      }
      set
      {
        __isset.isowncar = true;
        this._isowncar = value;
      }
    }

    public double C2bprice
    {
      get
      {
        return _c2bprice;
      }
      set
      {
        __isset.c2bprice = true;
        this._c2bprice = value;
      }
    }

    public int Istop
    {
      get
      {
        return _istop;
      }
      set
      {
        __isset.istop = true;
        this._istop = value;
      }
    }

    public string Statedescription
    {
      get
      {
        return _statedescription;
      }
      set
      {
        __isset.statedescription = true;
        this._statedescription = value;
      }
    }

    public int Iswarranty
    {
      get
      {
        return _iswarranty;
      }
      set
      {
        __isset.iswarranty = true;
        this._iswarranty = value;
      }
    }

    public string Warrantytypes
    {
      get
      {
        return _warrantytypes;
      }
      set
      {
        __isset.warrantytypes = true;
        this._warrantytypes = value;
      }
    }

    public int Isshowmr
    {
      get
      {
        return _isshowmr;
      }
      set
      {
        __isset.isshowmr = true;
        this._isshowmr = value;
      }
    }

    public string Carprovincename
    {
      get
      {
        return _carprovincename;
      }
      set
      {
        __isset.carprovincename = true;
        this._carprovincename = value;
      }
    }

    public string Carcityname
    {
      get
      {
        return _carcityname;
      }
      set
      {
        __isset.carcityname = true;
        this._carcityname = value;
      }
    }

    public int Cardistrictid
    {
      get
      {
        return _cardistrictid;
      }
      set
      {
        __isset.cardistrictid = true;
        this._cardistrictid = value;
      }
    }

    public string Cardistrictname
    {
      get
      {
        return _cardistrictname;
      }
      set
      {
        __isset.cardistrictname = true;
        this._cardistrictname = value;
      }
    }

    public string Slogan
    {
      get
      {
        return _slogan;
      }
      set
      {
        __isset.slogan = true;
        this._slogan = value;
      }
    }

    public double B2bprice
    {
      get
      {
        return _b2bprice;
      }
      set
      {
        __isset.b2bprice = true;
        this._b2bprice = value;
      }
    }

    public int Isb2b
    {
      get
      {
        return _isb2b;
      }
      set
      {
        __isset.isb2b = true;
        this._isb2b = value;
      }
    }

    public int Mainbrandid
    {
      get
      {
        return _mainbrandid;
      }
      set
      {
        __isset.mainbrandid = true;
        this._mainbrandid = value;
      }
    }

    public int Producerid
    {
      get
      {
        return _producerid;
      }
      set
      {
        __isset.producerid = true;
        this._producerid = value;
      }
    }

    public string Country
    {
      get
      {
        return _country;
      }
      set
      {
        __isset.country = true;
        this._country = value;
      }
    }

    public int Brandid
    {
      get
      {
        return _brandid;
      }
      set
      {
        __isset.brandid = true;
        this._brandid = value;
      }
    }

    public string Carlevel
    {
      get
      {
        return _carlevel;
      }
      set
      {
        __isset.carlevel = true;
        this._carlevel = value;
      }
    }

    public int Carlevelvalue
    {
      get
      {
        return _carlevelvalue;
      }
      set
      {
        __isset.carlevelvalue = true;
        this._carlevelvalue = value;
      }
    }

    public long Carid
    {
      get
      {
        return _carid;
      }
      set
      {
        __isset.carid = true;
        this._carid = value;
      }
    }

    public int Gearboxtype
    {
      get
      {
        return _gearboxtype;
      }
      set
      {
        __isset.gearboxtype = true;
        this._gearboxtype = value;
      }
    }

    public string Gearboxtypestring
    {
      get
      {
        return _gearboxtypestring;
      }
      set
      {
        __isset.gearboxtypestring = true;
        this._gearboxtypestring = value;
      }
    }

    public double Exhaustvalue
    {
      get
      {
        return _exhaustvalue;
      }
      set
      {
        __isset.exhaustvalue = true;
        this._exhaustvalue = value;
      }
    }

    public int Caryear
    {
      get
      {
        return _caryear;
      }
      set
      {
        __isset.caryear = true;
        this._caryear = value;
      }
    }

    public double Car_referprice
    {
      get
      {
        return _car_referprice;
      }
      set
      {
        __isset.car_referprice = true;
        this._car_referprice = value;
      }
    }

    public string Envirstandard
    {
      get
      {
        return _envirstandard;
      }
      set
      {
        __isset.envirstandard = true;
        this._envirstandard = value;
      }
    }

    public double Consumption
    {
      get
      {
        return _consumption;
      }
      set
      {
        __isset.consumption = true;
        this._consumption = value;
      }
    }

    public int Oiltype
    {
      get
      {
        return _oiltype;
      }
      set
      {
        __isset.oiltype = true;
        this._oiltype = value;
      }
    }

    public int Enginelocation
    {
      get
      {
        return _enginelocation;
      }
      set
      {
        __isset.enginelocation = true;
        this._enginelocation = value;
      }
    }

    public int Bodydoors
    {
      get
      {
        return _bodydoors;
      }
      set
      {
        __isset.bodydoors = true;
        this._bodydoors = value;
      }
    }

    public int Seatnummin
    {
      get
      {
        return _seatnummin;
      }
      set
      {
        __isset.seatnummin = true;
        this._seatnummin = value;
      }
    }

    public int Seatnummax
    {
      get
      {
        return _seatnummax;
      }
      set
      {
        __isset.seatnummax = true;
        this._seatnummax = value;
      }
    }

    public int Iswagon
    {
      get
      {
        return _iswagon;
      }
      set
      {
        __isset.iswagon = true;
        this._iswagon = value;
      }
    }

    public int Drivetype
    {
      get
      {
        return _drivetype;
      }
      set
      {
        __isset.drivetype = true;
        this._drivetype = value;
      }
    }

    public int Isagency
    {
      get
      {
        return _isagency;
      }
      set
      {
        __isset.isagency = true;
        this._isagency = value;
      }
    }

    public int Csbodyform
    {
      get
      {
        return _csbodyform;
      }
      set
      {
        __isset.csbodyform = true;
        this._csbodyform = value;
      }
    }

    public int Brandattr
    {
      get
      {
        return _brandattr;
      }
      set
      {
        __isset.brandattr = true;
        this._brandattr = value;
      }
    }

    public int Ismarkingvendor
    {
      get
      {
        return _ismarkingvendor;
      }
      set
      {
        __isset.ismarkingvendor = true;
        this._ismarkingvendor = value;
      }
    }

    public int Countryvalue
    {
      get
      {
        return _countryvalue;
      }
      set
      {
        __isset.countryvalue = true;
        this._countryvalue = value;
      }
    }

    public int Userid
    {
      get
      {
        return _userid;
      }
      set
      {
        __isset.userid = true;
        this._userid = value;
      }
    }

    public int Superiorid
    {
      get
      {
        return _superiorid;
      }
      set
      {
        __isset.superiorid = true;
        this._superiorid = value;
      }
    }

    public string Vendorname
    {
      get
      {
        return _vendorname;
      }
      set
      {
        __isset.vendorname = true;
        this._vendorname = value;
      }
    }

    public int Vendortype
    {
      get
      {
        return _vendortype;
      }
      set
      {
        __isset.vendortype = true;
        this._vendortype = value;
      }
    }

    public string Contact
    {
      get
      {
        return _contact;
      }
      set
      {
        __isset.contact = true;
        this._contact = value;
      }
    }

    public int Isjdvendor
    {
      get
      {
        return _isjdvendor;
      }
      set
      {
        __isset.isjdvendor = true;
        this._isjdvendor = value;
      }
    }

    public int Isinctransfer
    {
      get
      {
        return _isinctransfer;
      }
      set
      {
        __isset.isinctransfer = true;
        this._isinctransfer = value;
      }
    }

    public int Usertype
    {
      get
      {
        return _usertype;
      }
      set
      {
        __isset.usertype = true;
        this._usertype = value;
      }
    }

    public int Isactivity
    {
      get
      {
        return _isactivity;
      }
      set
      {
        __isset.isactivity = true;
        this._isactivity = value;
      }
    }

    public int Membertype
    {
      get
      {
        return _membertype;
      }
      set
      {
        __isset.membertype = true;
        this._membertype = value;
      }
    }

    public int Isbangmai
    {
      get
      {
        return _isbangmai;
      }
      set
      {
        __isset.isbangmai = true;
        this._isbangmai = value;
      }
    }

    public int Dvqflag
    {
      get
      {
        return _dvqflag;
      }
      set
      {
        __isset.dvqflag = true;
        this._dvqflag = value;
      }
    }

    public int Isbangmaiche
    {
      get
      {
        return _isbangmaiche;
      }
      set
      {
        __isset.isbangmaiche = true;
        this._isbangmaiche = value;
      }
    }

    public string Baidumap
    {
      get
      {
        return _baidumap;
      }
      set
      {
        __isset.baidumap = true;
        this._baidumap = value;
      }
    }

    public double Distance
    {
      get
      {
        return _distance;
      }
      set
      {
        __isset.distance = true;
        this._distance = value;
      }
    }

    public string Linkman
    {
      get
      {
        return _linkman;
      }
      set
      {
        __isset.linkman = true;
        this._linkman = value;
      }
    }

    public string Cartypeconfig
    {
      get
      {
        return _cartypeconfig;
      }
      set
      {
        __isset.cartypeconfig = true;
        this._cartypeconfig = value;
      }
    }

    public int Siteid
    {
      get
      {
        return _siteid;
      }
      set
      {
        __isset.siteid = true;
        this._siteid = value;
      }
    }

    public string Cartitle
    {
      get
      {
        return _cartitle;
      }
      set
      {
        __isset.cartitle = true;
        this._cartitle = value;
      }
    }

    public int Carlevelsecond
    {
      get
      {
        return _carlevelsecond;
      }
      set
      {
        __isset.carlevelsecond = true;
        this._carlevelsecond = value;
      }
    }

    public double Boost
    {
      get
      {
        return _boost;
      }
      set
      {
        __isset.boost = true;
        this._boost = value;
      }
    }

    public double Boostc
    {
      get
      {
        return _boostc;
      }
      set
      {
        __isset.boostc = true;
        this._boostc = value;
      }
    }

    public double Boostapp
    {
      get
      {
        return _boostapp;
      }
      set
      {
        __isset.boostapp = true;
        this._boostapp = value;
      }
    }

    public long Clickcount
    {
      get
      {
        return _clickcount;
      }
      set
      {
        __isset.clickcount = true;
        this._clickcount = value;
      }
    }

    public double Score
    {
      get
      {
        return _score;
      }
      set
      {
        __isset.score = true;
        this._score = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool ucarid;
      public bool ucarserialnumber;
      public bool ucarstatus;
      public bool carproviceid;
      public bool carcityid;
      public bool color;
      public bool drivingmileage;
      public bool completerate;
      public bool carsource1l;
      public bool isvideo;
      public bool firstpictrue;
      public bool cartype;
      public bool source;
      public bool isneglect;
      public bool picturecount;
      public bool picturenumber;
      public bool displayprice;
      public bool statusmodifytime;
      public bool createtime;
      public bool buycardate;
      public bool carpublishtime;
      public bool ucarpicwholepath;
      public bool isdealerrecommend;
      public bool isauthenticated;
      public bool isrecommendgl;
      public bool isowncar;
      public bool c2bprice;
      public bool istop;
      public bool statedescription;
      public bool iswarranty;
      public bool warrantytypes;
      public bool isshowmr;
      public bool carprovincename;
      public bool carcityname;
      public bool cardistrictid;
      public bool cardistrictname;
      public bool slogan;
      public bool b2bprice;
      public bool isb2b;
      public bool mainbrandid;
      public bool producerid;
      public bool country;
      public bool brandid;
      public bool carlevel;
      public bool carlevelvalue;
      public bool carid;
      public bool gearboxtype;
      public bool gearboxtypestring;
      public bool exhaustvalue;
      public bool caryear;
      public bool car_referprice;
      public bool envirstandard;
      public bool consumption;
      public bool oiltype;
      public bool enginelocation;
      public bool bodydoors;
      public bool seatnummin;
      public bool seatnummax;
      public bool iswagon;
      public bool drivetype;
      public bool isagency;
      public bool csbodyform;
      public bool brandattr;
      public bool ismarkingvendor;
      public bool countryvalue;
      public bool userid;
      public bool superiorid;
      public bool vendorname;
      public bool vendortype;
      public bool contact;
      public bool isjdvendor;
      public bool isinctransfer;
      public bool usertype;
      public bool isactivity;
      public bool membertype;
      public bool isbangmai;
      public bool dvqflag;
      public bool isbangmaiche;
      public bool baidumap;
      public bool distance;
      public bool linkman;
      public bool cartypeconfig;
      public bool siteid;
      public bool cartitle;
      public bool carlevelsecond;
      public bool boost;
      public bool boostc;
      public bool boostapp;
      public bool clickcount;
      public bool score;
    }

    public DTOCarModel() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.I32) {
                Ucarid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Ucarserialnumber = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.I32) {
                Ucarstatus = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I32) {
                Carproviceid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.I32) {
                Carcityid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                Color = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.I32) {
                Drivingmileage = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.I32) {
                Completerate = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.I32) {
                Carsource1l = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 10:
              if (field.Type == TType.I32) {
                Isvideo = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 11:
              if (field.Type == TType.I32) {
                Firstpictrue = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 12:
              if (field.Type == TType.I32) {
                Cartype = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 13:
              if (field.Type == TType.I32) {
                Source = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 15:
              if (field.Type == TType.I32) {
                Isneglect = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 16:
              if (field.Type == TType.I32) {
                Picturecount = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 17:
              if (field.Type == TType.I32) {
                Picturenumber = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 18:
              if (field.Type == TType.Double) {
                Displayprice = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 19:
              if (field.Type == TType.I64) {
                Statusmodifytime = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 20:
              if (field.Type == TType.I64) {
                Createtime = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 21:
              if (field.Type == TType.I64) {
                Buycardate = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 22:
              if (field.Type == TType.I64) {
                Carpublishtime = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 23:
              if (field.Type == TType.String) {
                Ucarpicwholepath = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 24:
              if (field.Type == TType.I32) {
                Isdealerrecommend = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 25:
              if (field.Type == TType.I32) {
                Isauthenticated = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 26:
              if (field.Type == TType.I32) {
                Isrecommendgl = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 27:
              if (field.Type == TType.I32) {
                Isowncar = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 28:
              if (field.Type == TType.Double) {
                C2bprice = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 29:
              if (field.Type == TType.I32) {
                Istop = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 30:
              if (field.Type == TType.String) {
                Statedescription = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 31:
              if (field.Type == TType.I32) {
                Iswarranty = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 32:
              if (field.Type == TType.String) {
                Warrantytypes = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 33:
              if (field.Type == TType.I32) {
                Isshowmr = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 34:
              if (field.Type == TType.String) {
                Carprovincename = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 35:
              if (field.Type == TType.String) {
                Carcityname = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 36:
              if (field.Type == TType.I32) {
                Cardistrictid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 37:
              if (field.Type == TType.String) {
                Cardistrictname = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 38:
              if (field.Type == TType.String) {
                Slogan = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 39:
              if (field.Type == TType.Double) {
                B2bprice = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 40:
              if (field.Type == TType.I32) {
                Isb2b = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 41:
              if (field.Type == TType.I32) {
                Mainbrandid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 42:
              if (field.Type == TType.I32) {
                Producerid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 43:
              if (field.Type == TType.String) {
                Country = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 44:
              if (field.Type == TType.I32) {
                Brandid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 45:
              if (field.Type == TType.String) {
                Carlevel = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 46:
              if (field.Type == TType.I32) {
                Carlevelvalue = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 47:
              if (field.Type == TType.I64) {
                Carid = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 48:
              if (field.Type == TType.I32) {
                Gearboxtype = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 49:
              if (field.Type == TType.String) {
                Gearboxtypestring = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 50:
              if (field.Type == TType.Double) {
                Exhaustvalue = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 51:
              if (field.Type == TType.I32) {
                Caryear = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 52:
              if (field.Type == TType.Double) {
                Car_referprice = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 53:
              if (field.Type == TType.String) {
                Envirstandard = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 54:
              if (field.Type == TType.Double) {
                Consumption = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 55:
              if (field.Type == TType.I32) {
                Oiltype = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 56:
              if (field.Type == TType.I32) {
                Enginelocation = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 57:
              if (field.Type == TType.I32) {
                Bodydoors = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 58:
              if (field.Type == TType.I32) {
                Seatnummin = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 59:
              if (field.Type == TType.I32) {
                Seatnummax = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 60:
              if (field.Type == TType.I32) {
                Iswagon = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 61:
              if (field.Type == TType.I32) {
                Drivetype = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 62:
              if (field.Type == TType.I32) {
                Isagency = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 63:
              if (field.Type == TType.I32) {
                Csbodyform = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 64:
              if (field.Type == TType.I32) {
                Brandattr = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 65:
              if (field.Type == TType.I32) {
                Ismarkingvendor = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 66:
              if (field.Type == TType.I32) {
                Countryvalue = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 67:
              if (field.Type == TType.I32) {
                Userid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 68:
              if (field.Type == TType.I32) {
                Superiorid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 69:
              if (field.Type == TType.String) {
                Vendorname = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 70:
              if (field.Type == TType.I32) {
                Vendortype = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 71:
              if (field.Type == TType.String) {
                Contact = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 72:
              if (field.Type == TType.I32) {
                Isjdvendor = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 73:
              if (field.Type == TType.I32) {
                Isinctransfer = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 74:
              if (field.Type == TType.I32) {
                Usertype = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 75:
              if (field.Type == TType.I32) {
                Isactivity = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 76:
              if (field.Type == TType.I32) {
                Membertype = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 77:
              if (field.Type == TType.I32) {
                Isbangmai = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 78:
              if (field.Type == TType.I32) {
                Dvqflag = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 79:
              if (field.Type == TType.I32) {
                Isbangmaiche = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 80:
              if (field.Type == TType.String) {
                Baidumap = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 81:
              if (field.Type == TType.Double) {
                Distance = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 82:
              if (field.Type == TType.String) {
                Linkman = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 83:
              if (field.Type == TType.String) {
                Cartypeconfig = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 84:
              if (field.Type == TType.I32) {
                Siteid = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 85:
              if (field.Type == TType.String) {
                Cartitle = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 86:
              if (field.Type == TType.I32) {
                Carlevelsecond = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 88:
              if (field.Type == TType.Double) {
                Boost = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 89:
              if (field.Type == TType.Double) {
                Boostc = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 90:
              if (field.Type == TType.Double) {
                Boostapp = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 92:
              if (field.Type == TType.I64) {
                Clickcount = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 93:
              if (field.Type == TType.Double) {
                Score = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("DTOCarModel");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.ucarid) {
          field.Name = "ucarid";
          field.Type = TType.I32;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Ucarid);
          oprot.WriteFieldEnd();
        }
        if (Ucarserialnumber != null && __isset.ucarserialnumber) {
          field.Name = "ucarserialnumber";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Ucarserialnumber);
          oprot.WriteFieldEnd();
        }
        if (__isset.ucarstatus) {
          field.Name = "ucarstatus";
          field.Type = TType.I32;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Ucarstatus);
          oprot.WriteFieldEnd();
        }
        if (__isset.carproviceid) {
          field.Name = "carproviceid";
          field.Type = TType.I32;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Carproviceid);
          oprot.WriteFieldEnd();
        }
        if (__isset.carcityid) {
          field.Name = "carcityid";
          field.Type = TType.I32;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Carcityid);
          oprot.WriteFieldEnd();
        }
        if (Color != null && __isset.color) {
          field.Name = "color";
          field.Type = TType.String;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Color);
          oprot.WriteFieldEnd();
        }
        if (__isset.drivingmileage) {
          field.Name = "drivingmileage";
          field.Type = TType.I32;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Drivingmileage);
          oprot.WriteFieldEnd();
        }
        if (__isset.completerate) {
          field.Name = "completerate";
          field.Type = TType.I32;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Completerate);
          oprot.WriteFieldEnd();
        }
        if (__isset.carsource1l) {
          field.Name = "carsource1l";
          field.Type = TType.I32;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Carsource1l);
          oprot.WriteFieldEnd();
        }
        if (__isset.isvideo) {
          field.Name = "isvideo";
          field.Type = TType.I32;
          field.ID = 10;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isvideo);
          oprot.WriteFieldEnd();
        }
        if (__isset.firstpictrue) {
          field.Name = "firstpictrue";
          field.Type = TType.I32;
          field.ID = 11;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Firstpictrue);
          oprot.WriteFieldEnd();
        }
        if (__isset.cartype) {
          field.Name = "cartype";
          field.Type = TType.I32;
          field.ID = 12;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Cartype);
          oprot.WriteFieldEnd();
        }
        if (__isset.source) {
          field.Name = "source";
          field.Type = TType.I32;
          field.ID = 13;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Source);
          oprot.WriteFieldEnd();
        }
        if (__isset.isneglect) {
          field.Name = "isneglect";
          field.Type = TType.I32;
          field.ID = 15;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isneglect);
          oprot.WriteFieldEnd();
        }
        if (__isset.picturecount) {
          field.Name = "picturecount";
          field.Type = TType.I32;
          field.ID = 16;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Picturecount);
          oprot.WriteFieldEnd();
        }
        if (__isset.picturenumber) {
          field.Name = "picturenumber";
          field.Type = TType.I32;
          field.ID = 17;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Picturenumber);
          oprot.WriteFieldEnd();
        }
        if (__isset.displayprice) {
          field.Name = "displayprice";
          field.Type = TType.Double;
          field.ID = 18;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Displayprice);
          oprot.WriteFieldEnd();
        }
        if (__isset.statusmodifytime) {
          field.Name = "statusmodifytime";
          field.Type = TType.I64;
          field.ID = 19;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Statusmodifytime);
          oprot.WriteFieldEnd();
        }
        if (__isset.createtime) {
          field.Name = "createtime";
          field.Type = TType.I64;
          field.ID = 20;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Createtime);
          oprot.WriteFieldEnd();
        }
        if (__isset.buycardate) {
          field.Name = "buycardate";
          field.Type = TType.I64;
          field.ID = 21;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Buycardate);
          oprot.WriteFieldEnd();
        }
        if (__isset.carpublishtime) {
          field.Name = "carpublishtime";
          field.Type = TType.I64;
          field.ID = 22;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Carpublishtime);
          oprot.WriteFieldEnd();
        }
        if (Ucarpicwholepath != null && __isset.ucarpicwholepath) {
          field.Name = "ucarpicwholepath";
          field.Type = TType.String;
          field.ID = 23;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Ucarpicwholepath);
          oprot.WriteFieldEnd();
        }
        if (__isset.isdealerrecommend) {
          field.Name = "isdealerrecommend";
          field.Type = TType.I32;
          field.ID = 24;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isdealerrecommend);
          oprot.WriteFieldEnd();
        }
        if (__isset.isauthenticated) {
          field.Name = "isauthenticated";
          field.Type = TType.I32;
          field.ID = 25;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isauthenticated);
          oprot.WriteFieldEnd();
        }
        if (__isset.isrecommendgl) {
          field.Name = "isrecommendgl";
          field.Type = TType.I32;
          field.ID = 26;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isrecommendgl);
          oprot.WriteFieldEnd();
        }
        if (__isset.isowncar) {
          field.Name = "isowncar";
          field.Type = TType.I32;
          field.ID = 27;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isowncar);
          oprot.WriteFieldEnd();
        }
        if (__isset.c2bprice) {
          field.Name = "c2bprice";
          field.Type = TType.Double;
          field.ID = 28;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(C2bprice);
          oprot.WriteFieldEnd();
        }
        if (__isset.istop) {
          field.Name = "istop";
          field.Type = TType.I32;
          field.ID = 29;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Istop);
          oprot.WriteFieldEnd();
        }
        if (Statedescription != null && __isset.statedescription) {
          field.Name = "statedescription";
          field.Type = TType.String;
          field.ID = 30;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Statedescription);
          oprot.WriteFieldEnd();
        }
        if (__isset.iswarranty) {
          field.Name = "iswarranty";
          field.Type = TType.I32;
          field.ID = 31;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Iswarranty);
          oprot.WriteFieldEnd();
        }
        if (Warrantytypes != null && __isset.warrantytypes) {
          field.Name = "warrantytypes";
          field.Type = TType.String;
          field.ID = 32;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Warrantytypes);
          oprot.WriteFieldEnd();
        }
        if (__isset.isshowmr) {
          field.Name = "isshowmr";
          field.Type = TType.I32;
          field.ID = 33;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isshowmr);
          oprot.WriteFieldEnd();
        }
        if (Carprovincename != null && __isset.carprovincename) {
          field.Name = "carprovincename";
          field.Type = TType.String;
          field.ID = 34;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Carprovincename);
          oprot.WriteFieldEnd();
        }
        if (Carcityname != null && __isset.carcityname) {
          field.Name = "carcityname";
          field.Type = TType.String;
          field.ID = 35;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Carcityname);
          oprot.WriteFieldEnd();
        }
        if (__isset.cardistrictid) {
          field.Name = "cardistrictid";
          field.Type = TType.I32;
          field.ID = 36;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Cardistrictid);
          oprot.WriteFieldEnd();
        }
        if (Cardistrictname != null && __isset.cardistrictname) {
          field.Name = "cardistrictname";
          field.Type = TType.String;
          field.ID = 37;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cardistrictname);
          oprot.WriteFieldEnd();
        }
        if (Slogan != null && __isset.slogan) {
          field.Name = "slogan";
          field.Type = TType.String;
          field.ID = 38;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Slogan);
          oprot.WriteFieldEnd();
        }
        if (__isset.b2bprice) {
          field.Name = "b2bprice";
          field.Type = TType.Double;
          field.ID = 39;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(B2bprice);
          oprot.WriteFieldEnd();
        }
        if (__isset.isb2b) {
          field.Name = "isb2b";
          field.Type = TType.I32;
          field.ID = 40;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isb2b);
          oprot.WriteFieldEnd();
        }
        if (__isset.mainbrandid) {
          field.Name = "mainbrandid";
          field.Type = TType.I32;
          field.ID = 41;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Mainbrandid);
          oprot.WriteFieldEnd();
        }
        if (__isset.producerid) {
          field.Name = "producerid";
          field.Type = TType.I32;
          field.ID = 42;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Producerid);
          oprot.WriteFieldEnd();
        }
        if (Country != null && __isset.country) {
          field.Name = "country";
          field.Type = TType.String;
          field.ID = 43;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Country);
          oprot.WriteFieldEnd();
        }
        if (__isset.brandid) {
          field.Name = "brandid";
          field.Type = TType.I32;
          field.ID = 44;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Brandid);
          oprot.WriteFieldEnd();
        }
        if (Carlevel != null && __isset.carlevel) {
          field.Name = "carlevel";
          field.Type = TType.String;
          field.ID = 45;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Carlevel);
          oprot.WriteFieldEnd();
        }
        if (__isset.carlevelvalue) {
          field.Name = "carlevelvalue";
          field.Type = TType.I32;
          field.ID = 46;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Carlevelvalue);
          oprot.WriteFieldEnd();
        }
        if (__isset.carid) {
          field.Name = "carid";
          field.Type = TType.I64;
          field.ID = 47;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Carid);
          oprot.WriteFieldEnd();
        }
        if (__isset.gearboxtype) {
          field.Name = "gearboxtype";
          field.Type = TType.I32;
          field.ID = 48;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Gearboxtype);
          oprot.WriteFieldEnd();
        }
        if (Gearboxtypestring != null && __isset.gearboxtypestring) {
          field.Name = "gearboxtypestring";
          field.Type = TType.String;
          field.ID = 49;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Gearboxtypestring);
          oprot.WriteFieldEnd();
        }
        if (__isset.exhaustvalue) {
          field.Name = "exhaustvalue";
          field.Type = TType.Double;
          field.ID = 50;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Exhaustvalue);
          oprot.WriteFieldEnd();
        }
        if (__isset.caryear) {
          field.Name = "caryear";
          field.Type = TType.I32;
          field.ID = 51;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Caryear);
          oprot.WriteFieldEnd();
        }
        if (__isset.car_referprice) {
          field.Name = "car_referprice";
          field.Type = TType.Double;
          field.ID = 52;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Car_referprice);
          oprot.WriteFieldEnd();
        }
        if (Envirstandard != null && __isset.envirstandard) {
          field.Name = "envirstandard";
          field.Type = TType.String;
          field.ID = 53;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Envirstandard);
          oprot.WriteFieldEnd();
        }
        if (__isset.consumption) {
          field.Name = "consumption";
          field.Type = TType.Double;
          field.ID = 54;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Consumption);
          oprot.WriteFieldEnd();
        }
        if (__isset.oiltype) {
          field.Name = "oiltype";
          field.Type = TType.I32;
          field.ID = 55;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Oiltype);
          oprot.WriteFieldEnd();
        }
        if (__isset.enginelocation) {
          field.Name = "enginelocation";
          field.Type = TType.I32;
          field.ID = 56;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Enginelocation);
          oprot.WriteFieldEnd();
        }
        if (__isset.bodydoors) {
          field.Name = "bodydoors";
          field.Type = TType.I32;
          field.ID = 57;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Bodydoors);
          oprot.WriteFieldEnd();
        }
        if (__isset.seatnummin) {
          field.Name = "seatnummin";
          field.Type = TType.I32;
          field.ID = 58;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Seatnummin);
          oprot.WriteFieldEnd();
        }
        if (__isset.seatnummax) {
          field.Name = "seatnummax";
          field.Type = TType.I32;
          field.ID = 59;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Seatnummax);
          oprot.WriteFieldEnd();
        }
        if (__isset.iswagon) {
          field.Name = "iswagon";
          field.Type = TType.I32;
          field.ID = 60;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Iswagon);
          oprot.WriteFieldEnd();
        }
        if (__isset.drivetype) {
          field.Name = "drivetype";
          field.Type = TType.I32;
          field.ID = 61;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Drivetype);
          oprot.WriteFieldEnd();
        }
        if (__isset.isagency) {
          field.Name = "isagency";
          field.Type = TType.I32;
          field.ID = 62;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isagency);
          oprot.WriteFieldEnd();
        }
        if (__isset.csbodyform) {
          field.Name = "csbodyform";
          field.Type = TType.I32;
          field.ID = 63;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Csbodyform);
          oprot.WriteFieldEnd();
        }
        if (__isset.brandattr) {
          field.Name = "brandattr";
          field.Type = TType.I32;
          field.ID = 64;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Brandattr);
          oprot.WriteFieldEnd();
        }
        if (__isset.ismarkingvendor) {
          field.Name = "ismarkingvendor";
          field.Type = TType.I32;
          field.ID = 65;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Ismarkingvendor);
          oprot.WriteFieldEnd();
        }
        if (__isset.countryvalue) {
          field.Name = "countryvalue";
          field.Type = TType.I32;
          field.ID = 66;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Countryvalue);
          oprot.WriteFieldEnd();
        }
        if (__isset.userid) {
          field.Name = "userid";
          field.Type = TType.I32;
          field.ID = 67;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Userid);
          oprot.WriteFieldEnd();
        }
        if (__isset.superiorid) {
          field.Name = "superiorid";
          field.Type = TType.I32;
          field.ID = 68;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Superiorid);
          oprot.WriteFieldEnd();
        }
        if (Vendorname != null && __isset.vendorname) {
          field.Name = "vendorname";
          field.Type = TType.String;
          field.ID = 69;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Vendorname);
          oprot.WriteFieldEnd();
        }
        if (__isset.vendortype) {
          field.Name = "vendortype";
          field.Type = TType.I32;
          field.ID = 70;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Vendortype);
          oprot.WriteFieldEnd();
        }
        if (Contact != null && __isset.contact) {
          field.Name = "contact";
          field.Type = TType.String;
          field.ID = 71;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Contact);
          oprot.WriteFieldEnd();
        }
        if (__isset.isjdvendor) {
          field.Name = "isjdvendor";
          field.Type = TType.I32;
          field.ID = 72;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isjdvendor);
          oprot.WriteFieldEnd();
        }
        if (__isset.isinctransfer) {
          field.Name = "isinctransfer";
          field.Type = TType.I32;
          field.ID = 73;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isinctransfer);
          oprot.WriteFieldEnd();
        }
        if (__isset.usertype) {
          field.Name = "usertype";
          field.Type = TType.I32;
          field.ID = 74;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Usertype);
          oprot.WriteFieldEnd();
        }
        if (__isset.isactivity) {
          field.Name = "isactivity";
          field.Type = TType.I32;
          field.ID = 75;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isactivity);
          oprot.WriteFieldEnd();
        }
        if (__isset.membertype) {
          field.Name = "membertype";
          field.Type = TType.I32;
          field.ID = 76;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Membertype);
          oprot.WriteFieldEnd();
        }
        if (__isset.isbangmai) {
          field.Name = "isbangmai";
          field.Type = TType.I32;
          field.ID = 77;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isbangmai);
          oprot.WriteFieldEnd();
        }
        if (__isset.dvqflag) {
          field.Name = "dvqflag";
          field.Type = TType.I32;
          field.ID = 78;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Dvqflag);
          oprot.WriteFieldEnd();
        }
        if (__isset.isbangmaiche) {
          field.Name = "isbangmaiche";
          field.Type = TType.I32;
          field.ID = 79;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Isbangmaiche);
          oprot.WriteFieldEnd();
        }
        if (Baidumap != null && __isset.baidumap) {
          field.Name = "baidumap";
          field.Type = TType.String;
          field.ID = 80;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Baidumap);
          oprot.WriteFieldEnd();
        }
        if (__isset.distance) {
          field.Name = "distance";
          field.Type = TType.Double;
          field.ID = 81;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Distance);
          oprot.WriteFieldEnd();
        }
        if (Linkman != null && __isset.linkman) {
          field.Name = "linkman";
          field.Type = TType.String;
          field.ID = 82;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Linkman);
          oprot.WriteFieldEnd();
        }
        if (Cartypeconfig != null && __isset.cartypeconfig) {
          field.Name = "cartypeconfig";
          field.Type = TType.String;
          field.ID = 83;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cartypeconfig);
          oprot.WriteFieldEnd();
        }
        if (__isset.siteid) {
          field.Name = "siteid";
          field.Type = TType.I32;
          field.ID = 84;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Siteid);
          oprot.WriteFieldEnd();
        }
        if (Cartitle != null && __isset.cartitle) {
          field.Name = "cartitle";
          field.Type = TType.String;
          field.ID = 85;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cartitle);
          oprot.WriteFieldEnd();
        }
        if (__isset.carlevelsecond) {
          field.Name = "carlevelsecond";
          field.Type = TType.I32;
          field.ID = 86;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(Carlevelsecond);
          oprot.WriteFieldEnd();
        }
        if (__isset.boost) {
          field.Name = "boost";
          field.Type = TType.Double;
          field.ID = 88;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Boost);
          oprot.WriteFieldEnd();
        }
        if (__isset.boostc) {
          field.Name = "boostc";
          field.Type = TType.Double;
          field.ID = 89;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Boostc);
          oprot.WriteFieldEnd();
        }
        if (__isset.boostapp) {
          field.Name = "boostapp";
          field.Type = TType.Double;
          field.ID = 90;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Boostapp);
          oprot.WriteFieldEnd();
        }
        if (__isset.clickcount) {
          field.Name = "clickcount";
          field.Type = TType.I64;
          field.ID = 92;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Clickcount);
          oprot.WriteFieldEnd();
        }
        if (__isset.score) {
          field.Name = "score";
          field.Type = TType.Double;
          field.ID = 93;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Score);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("DTOCarModel(");
      bool __first = true;
      if (__isset.ucarid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ucarid: ");
        __sb.Append(Ucarid);
      }
      if (Ucarserialnumber != null && __isset.ucarserialnumber) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ucarserialnumber: ");
        __sb.Append(Ucarserialnumber);
      }
      if (__isset.ucarstatus) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ucarstatus: ");
        __sb.Append(Ucarstatus);
      }
      if (__isset.carproviceid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carproviceid: ");
        __sb.Append(Carproviceid);
      }
      if (__isset.carcityid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carcityid: ");
        __sb.Append(Carcityid);
      }
      if (Color != null && __isset.color) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Color: ");
        __sb.Append(Color);
      }
      if (__isset.drivingmileage) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Drivingmileage: ");
        __sb.Append(Drivingmileage);
      }
      if (__isset.completerate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Completerate: ");
        __sb.Append(Completerate);
      }
      if (__isset.carsource1l) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carsource1l: ");
        __sb.Append(Carsource1l);
      }
      if (__isset.isvideo) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isvideo: ");
        __sb.Append(Isvideo);
      }
      if (__isset.firstpictrue) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Firstpictrue: ");
        __sb.Append(Firstpictrue);
      }
      if (__isset.cartype) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cartype: ");
        __sb.Append(Cartype);
      }
      if (__isset.source) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Source: ");
        __sb.Append(Source);
      }
      if (__isset.isneglect) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isneglect: ");
        __sb.Append(Isneglect);
      }
      if (__isset.picturecount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picturecount: ");
        __sb.Append(Picturecount);
      }
      if (__isset.picturenumber) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picturenumber: ");
        __sb.Append(Picturenumber);
      }
      if (__isset.displayprice) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Displayprice: ");
        __sb.Append(Displayprice);
      }
      if (__isset.statusmodifytime) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Statusmodifytime: ");
        __sb.Append(Statusmodifytime);
      }
      if (__isset.createtime) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Createtime: ");
        __sb.Append(Createtime);
      }
      if (__isset.buycardate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Buycardate: ");
        __sb.Append(Buycardate);
      }
      if (__isset.carpublishtime) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carpublishtime: ");
        __sb.Append(Carpublishtime);
      }
      if (Ucarpicwholepath != null && __isset.ucarpicwholepath) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ucarpicwholepath: ");
        __sb.Append(Ucarpicwholepath);
      }
      if (__isset.isdealerrecommend) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isdealerrecommend: ");
        __sb.Append(Isdealerrecommend);
      }
      if (__isset.isauthenticated) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isauthenticated: ");
        __sb.Append(Isauthenticated);
      }
      if (__isset.isrecommendgl) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isrecommendgl: ");
        __sb.Append(Isrecommendgl);
      }
      if (__isset.isowncar) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isowncar: ");
        __sb.Append(Isowncar);
      }
      if (__isset.c2bprice) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("C2bprice: ");
        __sb.Append(C2bprice);
      }
      if (__isset.istop) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Istop: ");
        __sb.Append(Istop);
      }
      if (Statedescription != null && __isset.statedescription) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Statedescription: ");
        __sb.Append(Statedescription);
      }
      if (__isset.iswarranty) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Iswarranty: ");
        __sb.Append(Iswarranty);
      }
      if (Warrantytypes != null && __isset.warrantytypes) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Warrantytypes: ");
        __sb.Append(Warrantytypes);
      }
      if (__isset.isshowmr) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isshowmr: ");
        __sb.Append(Isshowmr);
      }
      if (Carprovincename != null && __isset.carprovincename) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carprovincename: ");
        __sb.Append(Carprovincename);
      }
      if (Carcityname != null && __isset.carcityname) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carcityname: ");
        __sb.Append(Carcityname);
      }
      if (__isset.cardistrictid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cardistrictid: ");
        __sb.Append(Cardistrictid);
      }
      if (Cardistrictname != null && __isset.cardistrictname) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cardistrictname: ");
        __sb.Append(Cardistrictname);
      }
      if (Slogan != null && __isset.slogan) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Slogan: ");
        __sb.Append(Slogan);
      }
      if (__isset.b2bprice) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("B2bprice: ");
        __sb.Append(B2bprice);
      }
      if (__isset.isb2b) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isb2b: ");
        __sb.Append(Isb2b);
      }
      if (__isset.mainbrandid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mainbrandid: ");
        __sb.Append(Mainbrandid);
      }
      if (__isset.producerid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Producerid: ");
        __sb.Append(Producerid);
      }
      if (Country != null && __isset.country) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Country: ");
        __sb.Append(Country);
      }
      if (__isset.brandid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Brandid: ");
        __sb.Append(Brandid);
      }
      if (Carlevel != null && __isset.carlevel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carlevel: ");
        __sb.Append(Carlevel);
      }
      if (__isset.carlevelvalue) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carlevelvalue: ");
        __sb.Append(Carlevelvalue);
      }
      if (__isset.carid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carid: ");
        __sb.Append(Carid);
      }
      if (__isset.gearboxtype) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Gearboxtype: ");
        __sb.Append(Gearboxtype);
      }
      if (Gearboxtypestring != null && __isset.gearboxtypestring) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Gearboxtypestring: ");
        __sb.Append(Gearboxtypestring);
      }
      if (__isset.exhaustvalue) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Exhaustvalue: ");
        __sb.Append(Exhaustvalue);
      }
      if (__isset.caryear) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Caryear: ");
        __sb.Append(Caryear);
      }
      if (__isset.car_referprice) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Car_referprice: ");
        __sb.Append(Car_referprice);
      }
      if (Envirstandard != null && __isset.envirstandard) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Envirstandard: ");
        __sb.Append(Envirstandard);
      }
      if (__isset.consumption) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Consumption: ");
        __sb.Append(Consumption);
      }
      if (__isset.oiltype) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Oiltype: ");
        __sb.Append(Oiltype);
      }
      if (__isset.enginelocation) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Enginelocation: ");
        __sb.Append(Enginelocation);
      }
      if (__isset.bodydoors) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Bodydoors: ");
        __sb.Append(Bodydoors);
      }
      if (__isset.seatnummin) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Seatnummin: ");
        __sb.Append(Seatnummin);
      }
      if (__isset.seatnummax) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Seatnummax: ");
        __sb.Append(Seatnummax);
      }
      if (__isset.iswagon) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Iswagon: ");
        __sb.Append(Iswagon);
      }
      if (__isset.drivetype) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Drivetype: ");
        __sb.Append(Drivetype);
      }
      if (__isset.isagency) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isagency: ");
        __sb.Append(Isagency);
      }
      if (__isset.csbodyform) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Csbodyform: ");
        __sb.Append(Csbodyform);
      }
      if (__isset.brandattr) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Brandattr: ");
        __sb.Append(Brandattr);
      }
      if (__isset.ismarkingvendor) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ismarkingvendor: ");
        __sb.Append(Ismarkingvendor);
      }
      if (__isset.countryvalue) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Countryvalue: ");
        __sb.Append(Countryvalue);
      }
      if (__isset.userid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Userid: ");
        __sb.Append(Userid);
      }
      if (__isset.superiorid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Superiorid: ");
        __sb.Append(Superiorid);
      }
      if (Vendorname != null && __isset.vendorname) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Vendorname: ");
        __sb.Append(Vendorname);
      }
      if (__isset.vendortype) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Vendortype: ");
        __sb.Append(Vendortype);
      }
      if (Contact != null && __isset.contact) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Contact: ");
        __sb.Append(Contact);
      }
      if (__isset.isjdvendor) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isjdvendor: ");
        __sb.Append(Isjdvendor);
      }
      if (__isset.isinctransfer) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isinctransfer: ");
        __sb.Append(Isinctransfer);
      }
      if (__isset.usertype) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Usertype: ");
        __sb.Append(Usertype);
      }
      if (__isset.isactivity) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isactivity: ");
        __sb.Append(Isactivity);
      }
      if (__isset.membertype) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Membertype: ");
        __sb.Append(Membertype);
      }
      if (__isset.isbangmai) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isbangmai: ");
        __sb.Append(Isbangmai);
      }
      if (__isset.dvqflag) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dvqflag: ");
        __sb.Append(Dvqflag);
      }
      if (__isset.isbangmaiche) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Isbangmaiche: ");
        __sb.Append(Isbangmaiche);
      }
      if (Baidumap != null && __isset.baidumap) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Baidumap: ");
        __sb.Append(Baidumap);
      }
      if (__isset.distance) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Distance: ");
        __sb.Append(Distance);
      }
      if (Linkman != null && __isset.linkman) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Linkman: ");
        __sb.Append(Linkman);
      }
      if (Cartypeconfig != null && __isset.cartypeconfig) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cartypeconfig: ");
        __sb.Append(Cartypeconfig);
      }
      if (__isset.siteid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Siteid: ");
        __sb.Append(Siteid);
      }
      if (Cartitle != null && __isset.cartitle) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cartitle: ");
        __sb.Append(Cartitle);
      }
      if (__isset.carlevelsecond) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Carlevelsecond: ");
        __sb.Append(Carlevelsecond);
      }
      if (__isset.boost) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Boost: ");
        __sb.Append(Boost);
      }
      if (__isset.boostc) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Boostc: ");
        __sb.Append(Boostc);
      }
      if (__isset.boostapp) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Boostapp: ");
        __sb.Append(Boostapp);
      }
      if (__isset.clickcount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Clickcount: ");
        __sb.Append(Clickcount);
      }
      if (__isset.score) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Score: ");
        __sb.Append(Score);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
